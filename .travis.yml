language: c++

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test

    packages:
    - ccache
    - ninja-build
    - g++-5
    - gcc-5
    - g++-6
    - gcc-6


services:
  - docker

cache:
  directories:
    - ${HOME}/.ccache
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.6.2
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.7.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.0

env:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true
  
matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:
    # LINUX
    # GCC 5
    - os: linux
      env: COMPILER=g++-5 CCOMPILER=gcc-5 GCOV="" COMPUTE_COVERAGE=false MAKE_DOC=false
      compiler: gcc

    # GCC 6
    - os: linux
      env: COMPILER=g++-6 CCOMPILER=gcc-6 GCOV=gcov-6 COMPUTE_COVERAGE=true MAKE_DOC=true
      compiler: gcc
      
    # OSX
    # Xcode 6.4
    - os: osx
      env: COMPUTE_COVERAGE=false
      osx_image: xcode6.4
      
    # Xcode 7.3
    - os: osx
      env: COMPUTE_COVERAGE=false
      osx_image: xcode7.3
      
    # Xcode 8
    - os: osx
      env: COMPUTE_COVERAGE=false
      osx_image: xcode8
     
install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  
  ############################################################################
  # Override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; export CC=${CCOMPILER}; fi

  ############################################################################
  # For linux get docker image
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      docker pull lubkoll/spacy-ci:base
    fi

  ############################################################################
  # For osx do the setup in travis
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      ############################################################################
      # Install a recent CMake
      ############################################################################
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi

      ############################################################################
      # Install gtest
      ############################################################################
      cd ${DEPS_DIR}
      git clone https://github.com/google/googletest.git && cd googletest
      mkdir -p build && cd build
      cmake -DCMAKE_CXX_FLAGS="${CXXFLAGS}" -DCMAKE_SHARED_LINKER_FLAGS="${LDFLAGS}" ..
      cmake --build .
      sudo cp -r ../googletest/include/gtest /usr/local/include/
      sudo cp -r ../googlemock/include/gmock /usr/local/include/
      sudo cp googlemock/gtest/lib*.a /usr/local/lib
    fi

script:
  - cd $TRAVIS_BUILD_DIR
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      SHARED=/home/shared
      docker run --rm -ti -v ${TRAVIS_BUILD_DIR}:${SHARED} lubkoll/spacy-ci:base ${SHARED}/run_in_docker.sh ${CCOMPILER} ${COMPILER} ${GCOV} ${COVERALLS_TOKEN} ${COMPUTE_COVERAGE} ${MAKE_DOC}
    else
      mkdir build && cd build
      cmake -DBuildTest=ON -DCMAKE_CXX_FLAGS="${CXXFLAGS}" -DCMAKE_SHARED_LINKER_FLAGS="${LDFLAGS}" ..
      cmake --build .
      cd Test && ctest
    fi

